{"version":3,"sources":["features/auth/authApi.js","util/localStorageUtil.js","features/auth/authSlice.js","features/tasks/tasksSlice.js","app/store.js","features/tasks/tasksApi.js","features/tasks/taskRequests.js","features/tasks/taskForm.js","features/auth/authentication.js","features/tasks/task.js","features/tasks/tasks.js","features/auth/signInForm.js","features/auth/signIn.js","features/auth/signUpForm.js","features/auth/signUp.js","app/app.js","serviceWorker.js","theme.js","index.js","features/auth/alert.svg"],"names":["signIn","email","password","ky","post","json","signUp","username","save","key","item","localStorage","setItem","JSON","stringify","err","console","log","authSlice","createSlice","name","initialState","reducers","signUpStart","state","pending","signUpError","signUpSuccess","payload","currentUser","signUpFailure","action","signInStart","signInError","signInSuccess","signInFailure","actions","getToken","auth","token","getSignInErrorMessage","messages","getSignUpErrorMessage","tasksSlice","byId","ids","loading","error","getTasksStart","getTasksSuccess","tasksById","taskIds","getTasksFailure","addTask","id","text","completed","push","addTaskStart","syncing","addTaskSuccess","addTaskFailure","middleware","createLogger","predicate","_","type","startsWith","getDefaultMiddleware","combinedReducer","combineReducers","tasks","tasksReducer","form","formReducer","authReducer","configureStore","reducer","removeItem","undefined","preloadedState","getItem","parse","load","api","extend","hooks","beforeRequest","options","Store","getState","headers","set","postTask","tasksSchema","schema","Entity","reduxForm","connect","dispatch","reset","handleSubmit","onSubmit","Field","component","rows","onKeyDown","e","keyCode","preventDefault","keyDownHandler","sx","width","borderRadius","borderColor","p","outline","children","to","Task","borderBottom","py","mb","TasksContainer","map","useDispatch","useColorMode","colorMode","setColorMode","useEffect","a","get","normalize","entities","result","HTTPError","response","onClick","px","className","task","newTask","taskText","uuid","TasksApi","AuthedTask","loginHeader","login","maxWidth","backgroundColor","mx","mt","boxShadow","fieldGroup","pb","inputLabel","fontWeight","color","loginInput","button","fontSize","cursor","alertImage","mr","requiredField","input","label","meta","touched","validate","values","errors","props","src","alert","alt","lineHeight","textAlign","formValues","AuthApi","user","localStorageUtil","signInRequest","signUpRequest","App","height","fontFamily","bg","path","SignIn","SignUp","exact","Tasks","Boolean","window","location","hostname","match","mainFont","fonts","body","heading","monospace","space","sizes","fontSizes","display","reds","neutral","accent","accent2","dark","background","primary","n","prime","danger","defaultColors","theme","colors","modes","fontWeights","borderWidths","radii","letterSpacings","shadows","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7fe1f3db.chunk.js","sourcesContent":["import ky from 'ky'\n\nexport const signIn = ({ email, password }) =>\n  ky\n    .post('/api/session', {\n      json: {\n        email,\n        password,\n      },\n    })\n    .json()\n\nexport const signUp = ({ username, email, password }) =>\n  ky\n    .post('/api/users', {\n      json: {\n        username,\n        email,\n        password,\n      },\n    })\n    .json()\n","export const load = (key) => {\n  try {\n    const item = localStorage.getItem(key)\n    if (item === null) {\n      return undefined\n    }\n    return JSON.parse(item)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const save = (key, item) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(item))\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as AuthApi from './authApi'\nimport ky from 'ky'\nimport * as localStorageUtil from '../../util/localStorageUtil'\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {},\n  reducers: {\n    signUpStart(state) {\n      state.pending = true\n      state.signUpError = null\n    },\n    signUpSuccess(state, { payload }) {\n      state.currentUser = payload\n      state.pending = false\n      state.signUpError = null\n    },\n    signUpFailure(state, action) {\n      state.pending = false\n      state.signUpError = action.payload\n    },\n    signInStart(state) {\n      state.pending = true\n      state.signInError = null\n    },\n    signInSuccess(state, { payload }) {\n      state.currentUser = payload\n      state.pending = false\n      state.signInError = null\n    },\n    signInFailure(state, action) {\n      state.pending = false\n      state.signInError = action.payload\n    },\n  },\n})\n\nconst {\n  signUpStart,\n  signUpSuccess,\n  signUpFailure,\n  signInStart,\n  signInSuccess,\n  signInFailure,\n} = authSlice.actions\n\nexport const signInRequest = ({ email, password }) => async (dispatch) => {\n  try {\n    dispatch(signInStart())\n\n    const user = await AuthApi.signIn({ email, password })\n    dispatch(signInSuccess(user))\n    localStorageUtil.save('user', user)\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n    dispatch(signInFailure(error))\n  }\n}\nexport const signUpRequest = ({ username, email, password }) => async (\n  dispatch\n) => {\n  try {\n    dispatch(signUpStart())\n\n    const user = await AuthApi.signUp({ username, email, password })\n    dispatch(signUpSuccess(user))\n    localStorageUtil.save('user', user)\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n    dispatch(signUpFailure(error))\n  }\n}\n\nexport const getToken = (state) => state.auth.currentUser?.token\nexport const getSignInErrorMessage = (state) =>\n  state.auth.signInError?.messages[0]\nexport const getSignUpErrorMessage = (state) =>\n  state.auth.signUpError?.messages[0]\n\nexport default authSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    byId: {},\n    ids: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    getTasksStart(state) {\n      state.loading = true\n      state.error = null\n    },\n    getTasksSuccess(state, { payload }) {\n      const { tasksById, taskIds } = payload\n      state.byId = tasksById\n      state.ids = taskIds\n      state.loading = false\n      state.error = null\n    },\n    getTasksFailure(state, action) {\n      state.loading = false\n      state.error = action.payload\n    },\n\n    addTask(state, { payload }) {\n      const { id, text } = payload\n      state.byId[id] = { id, text, completed: false }\n      state.ids.push(id)\n    },\n    addTaskStart(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = true\n      state.byId[id].error = null\n    },\n    addTaskSuccess(state, { payload }) {\n      const { id } = payload\n      state.byId[id] = { ...state.byId[id], ...payload }\n      state.byId[id].syncing = false\n      state.byId[id].error = null\n    },\n    addTaskFailure(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = payload\n    },\n  },\n})\n\nexport const {\n  addTask,\n  getTasksStart,\n  getTasksSuccess,\n  getTasksFailure,\n  addTaskSuccess,\n} = tasksSlice.actions\n\nexport const getTasks = (state) => state.ids.map((id) => state.byId[id])\n\nexport default tasksSlice.reducer\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit'\r\nimport tasksReducer from '../features/tasks/tasksSlice'\r\nimport authReducer from '../features/auth/authSlice'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { createLogger } from 'redux-logger'\r\nimport { load } from '../util/localStorageUtil'\r\n\r\nconst logger = createLogger({\r\n  predicate: (_, action) => !action.type.startsWith('@@redux-form'),\r\n})\r\n\r\nconst middleware = [...getDefaultMiddleware()]\r\nif (process.env.NODE_ENV === 'development') {\r\n  middleware.push(logger)\r\n}\r\n\r\nconst combinedReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  form: formReducer,\r\n  auth: authReducer,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'logout') {\r\n    localStorage.removeItem('user')\r\n    state = undefined\r\n  }\r\n  return combinedReducer(state, action)\r\n}\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: {\r\n    auth: { currentUser: load('user') },\r\n  },\r\n  middleware,\r\n})\r\n","import ky from 'ky'\nimport { getToken } from '../auth/authSlice'\nimport Store from '../../app/store'\n\nconst api = ky.extend({\n  hooks: {\n    beforeRequest: [\n      (options) => {\n        const token = getToken(Store.getState())\n        token &&\n          options.headers.set('Authorization', 'Token token=\"' + token + '\"')\n      },\n    ],\n  },\n})\n\nexport const getTasks = () => api.get('/api/tasks').json()\n\nexport const postTask = ({ id, text }) =>\n  api\n    .post('/api/tasks', {\n      json: {\n        id,\n        text,\n      },\n    })\n    .json()\n","import * as TasksApi from './tasksApi'\nimport { v4 as uuid } from 'uuid'\nimport { normalize, schema } from 'normalizr'\nimport ky from 'ky'\nimport {\n  addTask,\n  getTasksStart,\n  getTasksSuccess,\n  getTasksFailure,\n  addTaskSuccess,\n} from './tasksSlice'\n\nconst taskSchema = new schema.Entity('tasks')\nconst tasksSchema = [taskSchema]\n\nexport const getTasksRequest = () => async (dispatch) => {\n  try {\n    dispatch(getTasksStart())\n\n    const tasks = await TasksApi.getTasks()\n    const { entities, result } = normalize(tasks, tasksSchema)\n    const tasksById = entities.tasks || {}\n    const taskIds = result\n\n    dispatch(getTasksSuccess({ tasksById, taskIds }))\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n\n    dispatch(getTasksFailure(error))\n    console.error('getTasksFailure:', error)\n  }\n}\n\nexport const addTaskRequest = (newTask) => async (dispatch) => {\n  try {\n    const { text } = newTask\n    const id = uuid()\n    dispatch(addTask({ id, text }))\n    const task = await TasksApi.postTask({ id, text })\n    dispatch(addTaskSuccess({ id: task.id, text: task.text }))\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n\n    dispatch(getTasksFailure(error))\n    console.error('addTaskFailure:', error)\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Field, reduxForm, reset } from 'redux-form'\nimport { connect } from 'react-redux'\nimport t from 'prop-types'\n\nconst TaskForm = ({ handleSubmit, reset }) => {\n  const keyDownHandler = (handleSubmit) => (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault()\n      handleSubmit()\n      reset()\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        component=\"textarea\"\n        name=\"taskText\"\n        rows={3}\n        onKeyDown={keyDownHandler(handleSubmit)}\n        sx={{\n          width: '100%',\n          borderRadius: 4,\n          borderColor: 'n.4',\n          p: 2,\n          outline: 'none',\n        }}\n      ></Field>\n    </form>\n  )\n}\n\nTaskForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  reset: t.func.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(reset('taskForm')),\n})\n\nexport default reduxForm({ form: 'taskForm' })(\n  connect(null, mapDispatchToProps)(TaskForm)\n)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport t from 'prop-types'\nimport { getToken } from './authSlice'\n\nconst Authentication = ({ token, children }) =>\n  token ? <>{children}</> : <Redirect to=\"/signin\" />\n\nexport default connect((state) => ({ token: getToken(state) }))(\n  Authentication\n)\n\nAuthentication.propTypes = {\n  token: t.string,\n  children: t.object.isRequired,\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport t from 'prop-types'\n\nconst Task = ({ id, text }) => (\n  <div\n    sx={{ borderBottom: '1px solid #000', borderColor: 'n.6', py: 3, mb: 2 }}\n    key={id}\n  >\n    {text}\n  </div>\n)\n\nTask.propTypes = {\n  id: t.string,\n  text: t.string,\n}\n\nexport default Task\n","/** @jsx jsx */\nimport { useEffect } from 'react'\nimport { jsx, useColorMode } from 'theme-ui'\nimport { connect, useDispatch } from 'react-redux'\nimport { getTasksRequest, addTaskRequest } from './taskRequests'\nimport { getTasks } from './tasksSlice'\nimport TaskForm from './taskForm'\nimport t from 'prop-types'\nimport Authentication from '../auth/authentication'\n\nimport Task from './task'\n\nconst Tasks = ({ tasks }) => {\n  const dispatch = useDispatch()\n  const [colorMode, setColorMode] = useColorMode()\n\n  useEffect(() => {\n    dispatch(getTasksRequest())\n  }, [dispatch])\n\n  const submit = ({ taskText }) => {\n    dispatch(addTaskRequest({ text: taskText }))\n  }\n\n  return (\n    <Authentication>\n      <button\n        onClick={(e) => {\n          setColorMode(colorMode === 'default' ? 'dark' : 'default')\n        }}\n      >\n        {colorMode === 'default' ? 'Dark' : 'Light'} theme\n      </button>\n      <button\n        onClick={() => {\n          dispatch({ type: 'logout' })\n        }}\n      >\n        Log out\n      </button>\n      <div sx={{ px: 8 }} className=\"tasks\">\n        {tasks.map((task) => (\n          <Task key={task.id} id={task.id} text={task.text} />\n        ))}\n        <TaskForm onSubmit={submit} />\n      </div>\n    </Authentication>\n  )\n}\n\nconst mapStateToProps = ({ tasks }) => ({\n  tasks: getTasks(tasks),\n})\n\nTasks.propTypes = {\n  tasks: t.arrayOf(\n    t.shape({ text: t.string.isRequired, completed: t.bool.isRequired })\n  ),\n}\nconst TasksContainer = connect(mapStateToProps)(Tasks)\n\nconst AuthedTask = () => {\n  return (\n    <Authentication>\n      <TasksContainer />\n    </Authentication>\n  )\n}\n\nexport default AuthedTask\n","/** @jsx jsx */\nimport { jsx, Label, Input, Button } from 'theme-ui'\nimport { reduxForm, Field } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport t from 'prop-types'\nimport alert from './alert.svg'\n\nconst loginHeader = {\n  mb: 4,\n}\n\nconst login = {\n  maxWidth: 13,\n  backgroundColor: 'n.10',\n  mx: 'auto',\n  mt: 7,\n  p: 5,\n  borderRadius: 5,\n  boxShadow: 0,\n}\nconst fieldGroup = { pb: 1, mb: 4 }\nconst inputLabel = {\n  mb: 1,\n  fontWeight: 2,\n  color: 'n.2',\n}\nconst loginInput = {\n  p: 2,\n  borderRadius: 3,\n  borderColor: 'n.5',\n  backgroundColor: 'n.8',\n}\nconst button = {\n  width: '100%',\n  backgroundColor: 'prime.2',\n  fontSize: 1,\n  fontWeight: 3,\n  p: 3,\n  mb: 3,\n  outline: 'none',\n  cursor: 'pointer',\n}\n\nconst alertImage = { width: 4, mr: 1 }\n\nconst validate = (values) => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Required'\n  }\n\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n\n  return errors\n}\n\nconst requiredField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <Label className=\"inputLabel\" sx={inputLabel}>\n      {label}\n    </Label>\n    <Input {...input} type={type} className=\"loginInput\" sx={loginInput} />\n    {touched && error && <span>{error}</span>}\n  </div>\n)\n\nconst SignInForm = (props) => {\n  const { handleSubmit, err } = props\n  return (\n    <form sx={login} onSubmit={handleSubmit}>\n      <div className=\"loginHeader\" sx={loginHeader}>\n        <div\n          sx={{\n            mb: 1,\n            fontSize: 3,\n            fontWeight: 2,\n            color: 'n.2',\n          }}\n        >\n          Tasski\n        </div>\n        <div\n          sx={{\n            fontSize: 6,\n            fontWeight: 3,\n            color: 'n.1',\n          }}\n        >\n          Log in\n        </div>\n      </div>\n      {err && (\n        <div\n          sx={{\n            color: 'danger.2',\n            mb: 2,\n          }}\n        >\n          <img src={alert} sx={alertImage} className=\"alert\" alt=\"alert\" />\n          <span sx={{ lineHeight: 2 }}> {err}</span>\n        </div>\n      )}\n\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          component={requiredField}\n        />\n      </div>\n      <Button sx={button}>LOG IN</Button>\n      <div\n        sx={{\n          textAlign: 'center',\n        }}\n      >\n        Don&apos; t have an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'signIn', validate })(SignInForm)\n\nSignInForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  err: t.string,\n}\n","import React from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport SignInForm from './signInForm'\nimport t from 'prop-types'\nimport { signInRequest, getToken, getSignInErrorMessage } from './authSlice'\n\nconst SignIn = ({ token, error }) => {\n  const dispatch = useDispatch()\n\n  const submit = (formValues) => dispatch(signInRequest(formValues))\n\n  if (token) {\n    return <Redirect to=\"/\" />\n  }\n\n  /* Named err instead of error as there's an error prop from\n      redux-form  that would override this one  */\n\n  return <SignInForm onSubmit={submit} err={error} />\n}\n\nexport default connect((state) => ({\n  token: getToken(state),\n  error: getSignInErrorMessage(state),\n}))(SignIn)\n\nSignIn.propTypes = {\n  token: t.string,\n  error: t.string,\n}\n","/** @jsx jsx */\nimport { jsx, Label, Input, Button } from 'theme-ui'\nimport { reduxForm, Field } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport t from 'prop-types'\nimport alert from './alert.svg'\n\nconst loginHeader = {\n  mb: 4,\n}\n\nconst login = {\n  maxWidth: 13,\n  backgroundColor: 'n.10',\n  mx: 'auto',\n  mt: 7,\n  p: 5,\n  borderRadius: 5,\n  boxShadow: 0,\n}\nconst fieldGroup = { pb: 1, mb: 4 }\nconst inputLabel = {\n  mb: 1,\n  fontWeight: 2,\n  color: 'n.2',\n}\nconst loginInput = {\n  p: 2,\n  borderRadius: 3,\n  borderColor: 'n.5',\n  backgroundColor: 'n.8',\n}\nconst button = {\n  width: '100%',\n  backgroundColor: 'prime.2',\n  fontSize: 1,\n  fontWeight: 3,\n  p: 3,\n  mb: 3,\n  outline: 'none',\n  cursor: 'pointer',\n}\n\nconst alertImage = { width: 4, mr: 1 }\n\nconst validate = (values) => {\n  const errors = {}\n  if (!values.username) {\n    errors.username = 'Required'\n  }\n  if (!values.email) {\n    errors.email = 'Required'\n  }\n\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n\n  return errors\n}\n\nconst requiredField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <Label className=\"inputLabel\" sx={inputLabel}>\n      {label}\n    </Label>\n    <Input {...input} type={type} className=\"loginInput\" sx={loginInput} />\n    {touched && error && <span>{error}</span>}\n  </div>\n)\n\nconst SignInForm = (props) => {\n  const { handleSubmit, err } = props\n  return (\n    <form sx={login} onSubmit={handleSubmit}>\n      <div className=\"loginHeader\" sx={loginHeader}>\n        <div\n          sx={{\n            mb: 1,\n            fontSize: 3,\n            fontWeight: 2,\n            color: 'n.2',\n          }}\n        >\n          Tasski\n        </div>\n        <div\n          sx={{\n            fontSize: 6,\n            fontWeight: 3,\n            color: 'n.1',\n          }}\n        >\n          Sign up\n        </div>\n      </div>\n      {err && (\n        <div\n          sx={{\n            color: 'danger.2',\n            mb: 2,\n          }}\n        >\n          <img src={alert} sx={alertImage} className=\"alert\" alt=\"alert\" />\n          <span sx={{ lineHeight: 2 }}> {err}</span>\n        </div>\n      )}\n\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"username\"\n          type=\"username\"\n          label=\"Username\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          component={requiredField}\n        />\n      </div>\n      <Button sx={button}>SIGN UP</Button>\n      <div\n        sx={{\n          textAlign: 'center',\n        }}\n      >\n        Already signed up? Go to <Link to=\"/signin\">Login</Link>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'signIn', validate })(SignInForm)\n\nSignInForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  err: t.string,\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useDispatch, connect } from 'react-redux'\nimport SignUpForm from './signUpForm'\nimport t from 'prop-types'\nimport { signUpRequest, getToken, getSignUpErrorMessage } from './authSlice'\n\nconst SignUp = ({ token, error }) => {\n  const dispatch = useDispatch()\n\n  const submit = (formValues) => dispatch(signUpRequest(formValues))\n\n  if (token) {\n    return <Redirect to=\"/\" />\n  }\n\n  /* Named err instead of error as there's an error prop from\n      redux-form  that would override this one  */\n\n  return <SignUpForm onSubmit={submit} err={error} />\n}\n\nexport default connect((state) => ({\n  token: getToken(state),\n  error: getSignUpErrorMessage(state),\n}))(SignUp)\n\nSignUp.propTypes = {\n  token: t.string,\n  error: t.string,\n}\n","/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport Tasks from '../features/tasks/tasks'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport SignIn from '../features/auth/signIn'\r\nimport SignUp from '../features/auth/signUp'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div\r\n      sx={{\r\n        height: '100vh',\r\n        p: 6,\r\n        fontSize: 2,\r\n        fontFamily: 'body',\r\n        bg: 'n.9',\r\n      }}\r\n      className=\"App\"\r\n    >\r\n      <Switch>\r\n        <Route path=\"/signin\" component={SignIn} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n        <Route exact path=\"/\" component={Tasks} />\r\n        {/* <Route component={NotFound} /> */}\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // eslint-disable-next-line no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // eslint-disable-next-line no-console\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","const mainFont =\n  '\"Avenir Next\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif'\n\nconst fonts = {\n  body: mainFont,\n  heading: mainFont,\n  monospace: 'Menlo, monospace',\n}\n\nconst space = [\n  0,\n  4,\n  8,\n  12,\n  16,\n  24,\n  32,\n  48,\n  64,\n  96,\n  128,\n  192,\n  256,\n  384,\n  512,\n  640,\n  768,\n]\nconst sizes = space\n\nconst fontSizes = [10, 12, 14, 16, 18, 20, 24, 30, 36, 48, 60, 72]\nfontSizes.body = fontSizes[2]\nfontSizes.display = fontSizes[5]\n\nconst borderWidths = [0, 1, 2, 3, 4, 5, 6]\nconst radii = [0, 2, 3, 4, 6, 8, 12, 16]\n\nconst fontWeights = [400, 500, 600, 700]\n\nconst letterSpacings = [0.5, 1, 2]\n\nconst shadows = [\n  '0 1px 3px hsla(0,0%,0%,.2)',\n  '0 4px 6px hsla(0,0%,0%,.2)',\n  '0 5px 15px hsla(0,0%,0%,.2)',\n  '0 10px 24px hsla(0,0%,0%,.2)',\n  '0 15px 35px hsla(0,0%,0%,.2)',\n\n  '0 1px 3px hsla(0,0%,0%,.12),0 1px 2px hsla(0,0%,0%,.24)',\n  '0 3px 6px hsla(0,0%,0%,.15),0 2px 4px hsla(0,0%,0%,.12)',\n  '0 3px 6px hsla(0,0%,0%,.10),0 10px 20px hsla(0,0%,0%,.15)',\n  '0 15px 25px hsla(0,0%,0%,.15),0 5px 10px hsla(0,0%,0%,.5)',\n  '0 20px 40px hsla(0,0%,0%,.2)',\n]\n\nconst blues = [\n  'hsl(207deg 50% 15%)',\n  'hsl(207deg 59% 28%)',\n  'hsl(207deg 61% 39%)',\n  'hsl(207deg 57% 49%)',\n  'hsl(207deg 58% 62%)',\n  'hsl(206deg 75% 81%)',\n  'hsl(206deg 100% 97%)',\n]\n\nconst greys = [\n  'hsl(213deg 12% 15%)',\n  'hsl(210deg 10% 23%)',\n  'hsl(187deg 5% 30%)',\n  'hsl(210deg 7% 56%)',\n  'hsl(210deg 11% 71%)',\n  'hsl(210deg 14% 83%)',\n  'hsl(210deg 14% 89%)',\n  'hsl(210deg 16% 93%)',\n  'hsl(210deg 17% 95%)',\n  'hsl(210deg 17% 98%)',\n  'hsl(210deg 17% 100%)',\n]\n\nconst cyanGreens = [\n  'hsl(179deg 53% 18%)',\n  'hsl(174deg 53% 26%)',\n  'hsl(174deg 50% 38%)',\n  'hsl(174deg 45% 47%)',\n  'hsl(177deg 56% 65%)',\n  'hsl(176deg 67% 80%)',\n  'hsl(177deg 100% 95%)',\n]\n\nconst greens = [\n  'rgb(23, 80, 56)',\n  'rgb(31, 118, 67)',\n  'rgb(45, 156, 90)',\n  'rgb(64, 192, 117)',\n  'rgb(120, 216, 161)',\n  'rgb(170, 237, 194)',\n  'rgb(228, 252, 236)',\n]\n\nconst yellows = [\n  'rgb(91, 71, 24)',\n  'rgb(139, 108, 39)',\n  'rgb(201, 164, 70)',\n  'rgb(243, 201, 108)',\n  'rgb(249, 225, 164)',\n  'rgb(253, 243, 216)',\n  'rgb(255, 252, 244)',\n]\n\nconst reds = [\n  'rgb(96, 25, 26)',\n  'rgb(135, 38, 31)',\n  'rgb(181, 34, 38)',\n  'rgb(218, 50, 54)',\n  'rgb(226, 101, 103)',\n  'rgb(241, 169, 170)',\n  'rgb(251, 232, 232)',\n]\n\nconst neutral = greys\nconst n = neutral\nconst prime = reds\nconst danger = reds\n\nconst accent = cyanGreens\nconst accent2 = greens\n\nconst dark = {\n  text: neutral[5],\n  background: neutral[0],\n  primary: accent[2],\n  neutral,\n  n,\n  prime,\n  accent,\n  accent2,\n  danger,\n}\n\nconst defaultColors = {\n  text: neutral[0],\n  background: neutral[5],\n  primary: accent[2],\n  neutral,\n  prime,\n  n,\n  accent,\n  accent2,\n  danger,\n}\n\nconst colors = {\n  ...defaultColors,\n  modes: {\n    dark,\n  },\n}\n\nconst theme = {\n  fonts,\n  colors,\n  sizes,\n  space,\n  fontSizes,\n  fontWeights,\n  borderWidths,\n  radii,\n  letterSpacings,\n  shadows,\n}\n\nexport default theme\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app/app'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ThemeProvider } from 'theme-ui'\r\nimport theme from './theme'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/alert.75219400.svg\";"],"sourceRoot":""}