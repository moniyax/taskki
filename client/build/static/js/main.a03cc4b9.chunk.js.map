{"version":3,"sources":["features/layout/moon.svg","features/layout/sun.svg","features/tasks/check.svg","features/tasks/circle.svg","features/auth/signInForm.js","features/auth/authApi.js","util/localStorageUtil.js","features/auth/authSlice.js","features/auth/signIn.js","features/auth/signUpForm.js","features/auth/signUp.js","features/auth/authentication.js","features/layout/header.js","features/tasks/tasksSlice.js","app/store.js","features/tasks/tasksApi.js","features/tasks/taskRequests.js","util/propTypes.js","features/tasks/task.js","features/tasks/taskEditInput.js","features/tasks/taskDetailsText.js","features/tasks/taskDetailsActions.js","features/tasks/taskDate.js","features/tasks/taskNotesEdit.js","features/tasks/taskNotesSection.js","features/tasks/taskDetails.js","features/tasks/taskList.js","features/tasks/taskForm.js","features/layout/main.js","features/layout/home.js","app/app.js","serviceWorker.js","theme.js","index.js","features/auth/alert.svg"],"names":["module","exports","loginHeader","mb","login","maxWidth","backgroundColor","mx","mt","p","borderRadius","boxShadow","fieldGroup","pb","inputLabel","fontWeight","color","loginInput","borderColor","button","width","fontSize","outline","cursor","alertImage","mr","requiredField","input","label","type","meta","touched","error","className","sx","reduxForm","form","validate","values","errors","email","password","props","handleSubmit","err","onSubmit","src","alert","alt","lineHeight","Field","name","component","textAlign","to","signIn","ky","post","json","signUp","username","save","key","item","localStorage","setItem","JSON","stringify","console","log","authSlice","createSlice","initialState","reducers","signUpStart","state","pending","signUpError","signUpSuccess","payload","currentUser","signUpFailure","action","signInStart","signInError","signInSuccess","signInFailure","actions","getToken","auth","token","getSignInErrorMessage","messages","getSignUpErrorMessage","connect","dispatch","useDispatch","height","bg","overflow","formValues","a","AuthApi","user","localStorageUtil","HTTPError","response","signInRequest","signUpRequest","children","Header","useColorMode","colorMode","setColorMode","top","right","left","position","display","justifyContent","zIndex","onClick","fontFamily","border","padding","moon","sun","tasksSlice","byId","ids","loading","getTasksStart","getTasksSuccess","tasksById","taskIds","getTasksFailure","addTask","id","text","completed","push","addTaskStart","syncing","addTaskSuccess","addTaskFailure","updateTask","updateTaskStart","updateTaskSuccess","updateTaskFailure","deleteTask","filter","_id","deleteTaskStart","deleteTaskSuccess","deleteTaskFailure","getTask","taskId","tasks","middleware","createLogger","predicate","_","startsWith","getDefaultMiddleware","combinedReducer","combineReducers","tasksReducer","formReducer","authReducer","configureStore","reducer","removeItem","undefined","preloadedState","getItem","parse","load","api","extend","hooks","beforeRequest","options","Store","getState","headers","set","postTask","taskFields","patch","tasksSchema","schema","Entity","updateTaskRequest","TasksApi","taskSuccess","taskFailure","datePropType","propName","componentName","test","Error","guidPropType","userProps","t","number","string","avatarKey","lastSeen","isOnline","bool","currentUserProps","commonMessageProps","senderId","sender","exact","conversationId","mediaKey","mediaName","mediaSize","mediaType","createdAt","updatedAt","selected","replyMessageProps","taskStyle","replyMessageId","replyMessage","replyTo","byCurrentUser","offline","status","arrayOf","isRequired","object","completedStyle","textDecoration","px","py","Task","borderBottom","alignItems","defaultChecked","backgroundSize","backgroundImage","circle","check","textStyle","TaskEditInput","setEditing","textInput","useRef","useParams","useEffect","current","focus","useState","inputVal","setInputVal","updateText","value","onChange","e","target","onKeyDown","keyCode","onBlur","ref","textLabelStyle","TaskTextLabel","TaskDetailsText","editing","detailText","borderBottomLeftRadius","borderBottomRightRadius","archiveButtonStyle","completeButtonStyle","TaskDetailsActions","history","useHistory","archived","archiveTaskRequest","TaskDate","variant","moment","format","notesInputStyle","TaskNotesEdit","notes","notesInput","TaskNotesDisplay","TaskNotesPrompt","borderStyle","TaskNotes","TaskNotesBody","TaskNotesSection","modalBackdrop","bottom","modal","margin","background","pt","closeButton","withRouter","params","match","task","preventDefault","map","taskGroup","useCallback","length","reset","rows","keyDownHandler","Main","get","normalize","entities","result","tasksFailure","m","taskText","uuid","newTask","Home","Fragment","App","path","SignIn","SignUp","Boolean","window","location","hostname","mainFont","fonts","body","heading","monospace","space","sizes","fontSizes","reds","neutral","accent","accent2","dark","primary","n","a2","danger","defaultColors","theme","colors","modes","fontWeights","borderWidths","radii","letterSpacings","shadows","default","caps","textTransform","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a03cc4b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon.cccb61fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.63bd8425.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.a69433bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.7813cd76.svg\";","/** @jsx jsx */\nimport { jsx, Label, Input, Button } from 'theme-ui'\nimport { reduxForm, Field } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport t from 'prop-types'\nimport alert from './alert.svg'\n\nconst loginHeader = {\n  mb: 4,\n}\n\nconst login = {\n  maxWidth: 14,\n  backgroundColor: 'n.10',\n  mx: 'auto',\n  mt: 7,\n  p: 5,\n  borderRadius: 5,\n  boxShadow: 0,\n}\nconst fieldGroup = { pb: 1, mb: 4 }\nconst inputLabel = {\n  mb: 1,\n  fontWeight: 2,\n  color: 'n.2',\n}\nconst loginInput = {\n  p: 2,\n  borderRadius: 3,\n  borderColor: 'n.5',\n  backgroundColor: 'n.8',\n}\nconst button = {\n  width: '100%',\n  backgroundColor: 'prime.2',\n  fontSize: 1,\n  fontWeight: 3,\n  p: 3,\n  mb: 3,\n  outline: 'none',\n  cursor: 'pointer',\n}\n\nconst alertImage = { width: 4, mr: 1 }\n\nconst validate = (values) => {\n  const errors = {}\n  if (!values.email) {\n    errors.email = 'Required'\n  }\n\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n\n  return errors\n}\n\nconst requiredField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <Label className=\"inputLabel\" sx={inputLabel}>\n      {label}\n    </Label>\n    <Input {...input} type={type} className=\"loginInput\" sx={loginInput} />\n    {touched && error && <span>{error}</span>}\n  </div>\n)\n\nconst SignInForm = (props) => {\n  const { handleSubmit, err } = props\n  return (\n    <form sx={login} onSubmit={handleSubmit}>\n      <div className=\"loginHeader\" sx={loginHeader}>\n        <div\n          sx={{\n            mb: 1,\n            fontSize: 3,\n            fontWeight: 2,\n            color: 'n.2',\n          }}\n        >\n          Tasski\n        </div>\n        <div\n          sx={{\n            fontSize: 6,\n            fontWeight: 3,\n            color: 'n.1',\n          }}\n        >\n          Log in\n        </div>\n      </div>\n      {err && (\n        <div\n          sx={{\n            color: 'danger.2',\n            mb: 2,\n          }}\n        >\n          <img src={alert} sx={alertImage} className=\"alert\" alt=\"alert\" />\n          <span sx={{ lineHeight: 2 }}> {err}</span>\n        </div>\n      )}\n\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          component={requiredField}\n        />\n      </div>\n      <Button sx={button}>LOG IN</Button>\n      <div\n        sx={{\n          textAlign: 'center',\n        }}\n      >\n        Don&apos; t have an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'signIn', validate })(SignInForm)\n\nSignInForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  err: t.string,\n}\n","import ky from 'ky'\n\nexport const signIn = ({ email, password }) =>\n  ky\n    .post('/api/session', {\n      json: {\n        email,\n        password,\n      },\n    })\n    .json()\n\nexport const signUp = ({ username, email, password }) =>\n  ky\n    .post('/api/users', {\n      json: {\n        username,\n        email,\n        password,\n      },\n    })\n    .json()\n","export const load = (key) => {\n  try {\n    const item = localStorage.getItem(key)\n    if (item === null) {\n      return undefined\n    }\n    return JSON.parse(item)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const save = (key, item) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(item))\n  } catch (err) {\n    console.log(err)\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as AuthApi from './authApi'\nimport ky from 'ky'\nimport * as localStorageUtil from '../../util/localStorageUtil'\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {},\n  reducers: {\n    signUpStart(state) {\n      state.pending = true\n      state.signUpError = null\n    },\n    signUpSuccess(state, { payload }) {\n      state.currentUser = payload\n      state.pending = false\n      state.signUpError = null\n    },\n    signUpFailure(state, action) {\n      state.pending = false\n      state.signUpError = action.payload\n    },\n    signInStart(state) {\n      state.pending = true\n      state.signInError = null\n    },\n    signInSuccess(state, { payload }) {\n      state.currentUser = payload\n      state.pending = false\n      state.signInError = null\n    },\n    signInFailure(state, action) {\n      state.pending = false\n      state.signInError = action.payload\n    },\n  },\n})\n\nconst {\n  signUpStart,\n  signUpSuccess,\n  signUpFailure,\n  signInStart,\n  signInSuccess,\n  signInFailure,\n} = authSlice.actions\n\nexport const signInRequest = ({ email, password }) => async (dispatch) => {\n  try {\n    dispatch(signInStart())\n\n    const user = await AuthApi.signIn({ email, password })\n    dispatch(signInSuccess(user))\n    localStorageUtil.save('user', user)\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n    dispatch(signInFailure(error))\n  }\n}\nexport const signUpRequest = ({ username, email, password }) => async (\n  dispatch\n) => {\n  try {\n    dispatch(signUpStart())\n\n    const user = await AuthApi.signUp({ username, email, password })\n    dispatch(signUpSuccess(user))\n    localStorageUtil.save('user', user)\n  } catch (_error) {\n    if (!(_error instanceof ky.HTTPError)) throw _error\n    const error = await _error.response.json()\n    dispatch(signUpFailure(error))\n  }\n}\n\nexport const getToken = (state) => state.auth.currentUser?.token\nexport const getSignInErrorMessage = (state) =>\n  state.auth.signInError?.messages[0]\nexport const getSignUpErrorMessage = (state) =>\n  state.auth.signUpError?.messages[0]\n\nexport default authSlice.reducer\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { connect, useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport SignInForm from './signInForm'\nimport t from 'prop-types'\nimport { signInRequest, getToken, getSignInErrorMessage } from './authSlice'\n\nconst SignIn = ({ token, error }) => {\n  const dispatch = useDispatch()\n\n  const submit = (formValues) => dispatch(signInRequest(formValues))\n\n  if (token) {\n    return <Redirect to=\"/\" />\n  }\n\n  /* Named err instead of error as there's an error prop from\n      redux-form  that would override this one  */\n\n  return (\n    <div sx={{ height: '100vh', bg: 'n.10', overflow: 'auto' }}>\n      <SignInForm onSubmit={submit} err={error} />\n    </div>\n  )\n}\n\nexport default connect((state) => ({\n  token: getToken(state),\n  error: getSignInErrorMessage(state),\n}))(SignIn)\n\nSignIn.propTypes = {\n  token: t.string,\n  error: t.string,\n}\n","/** @jsx jsx */\nimport { jsx, Label, Input, Button } from 'theme-ui'\nimport { reduxForm, Field } from 'redux-form'\nimport { Link } from 'react-router-dom'\nimport t from 'prop-types'\nimport alert from './alert.svg'\n\nconst loginHeader = {\n  mb: 4,\n}\n\nconst login = {\n  maxWidth: 14,\n  backgroundColor: 'n.10',\n  mx: 'auto',\n  mt: 7,\n  p: 5,\n  borderRadius: 5,\n  boxShadow: 0,\n}\nconst fieldGroup = { pb: 1, mb: 4 }\nconst inputLabel = {\n  mb: 1,\n  fontWeight: 2,\n  color: 'n.2',\n}\nconst loginInput = {\n  p: 2,\n  borderRadius: 3,\n  borderColor: 'n.5',\n  backgroundColor: 'n.8',\n}\nconst button = {\n  width: '100%',\n  backgroundColor: 'p.2',\n  fontSize: 1,\n  fontWeight: 3,\n  p: 3,\n  mb: 3,\n  outline: 'none',\n  cursor: 'pointer',\n}\n\nconst alertImage = { width: 4, mr: 1 }\n\nconst validate = (values) => {\n  const errors = {}\n  if (!values.username) {\n    errors.username = 'Required'\n  }\n  if (!values.email) {\n    errors.email = 'Required'\n  }\n\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n\n  return errors\n}\n\nconst requiredField = ({ input, label, type, meta: { touched, error } }) => (\n  <div>\n    <Label className=\"inputLabel\" sx={inputLabel}>\n      {label}\n    </Label>\n    <Input {...input} type={type} className=\"loginInput\" sx={loginInput} />\n    {touched && error && <span>{error}</span>}\n  </div>\n)\n\nconst SignInForm = (props) => {\n  const { handleSubmit, err } = props\n  return (\n    <form sx={login} onSubmit={handleSubmit}>\n      <div className=\"loginHeader\" sx={loginHeader}>\n        <div\n          sx={{\n            mb: 1,\n            fontSize: 3,\n            fontWeight: 2,\n            color: 'n.2',\n          }}\n        >\n          Tasski\n        </div>\n        <div\n          sx={{\n            fontSize: 6,\n            fontWeight: 3,\n            color: 'n.1',\n          }}\n        >\n          Sign up\n        </div>\n      </div>\n      {err && (\n        <div\n          sx={{\n            color: 'danger.2',\n            mb: 2,\n          }}\n        >\n          <img src={alert} sx={alertImage} className=\"alert\" alt=\"alert\" />\n          <span sx={{ lineHeight: 2 }}> {err}</span>\n        </div>\n      )}\n\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"username\"\n          type=\"username\"\n          label=\"Username\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          component={requiredField}\n        />\n      </div>\n      <div className=\"fieldGroup\" sx={fieldGroup}>\n        <Field\n          name=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          component={requiredField}\n        />\n      </div>\n      <Button sx={button}>SIGN UP</Button>\n      <div\n        sx={{\n          textAlign: 'center',\n        }}\n      >\n        Already signed up? Go to <Link to=\"/signin\">Login</Link>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({ form: 'signIn', validate })(SignInForm)\n\nSignInForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  err: t.string,\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useDispatch, connect } from 'react-redux'\nimport SignUpForm from './signUpForm'\nimport t from 'prop-types'\nimport { signUpRequest, getToken, getSignUpErrorMessage } from './authSlice'\n\nconst SignUp = ({ token, error }) => {\n  const dispatch = useDispatch()\n\n  const submit = (formValues) => dispatch(signUpRequest(formValues))\n\n  if (token) {\n    return <Redirect to=\"/\" />\n  }\n\n  /* Named err instead of error as there's an error prop from\n      redux-form  that would override this one  */\n\n  return (\n    <div sx={{ height: '100vh', bg: 'n.10', overflow: 'auto' }}>\n      <SignUpForm onSubmit={submit} err={error} />\n    </div>\n  )\n}\n\nexport default connect((state) => ({\n  token: getToken(state),\n  error: getSignUpErrorMessage(state),\n}))(SignUp)\n\nSignUp.propTypes = {\n  token: t.string,\n  error: t.string,\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport t from 'prop-types'\nimport { getToken } from './authSlice'\n\nconst Authentication = ({ token, children }) =>\n  token ? <>{children}</> : <Redirect to=\"/signin\" />\n\nexport default connect((state) => ({ token: getToken(state) }))(\n  Authentication\n)\n\nAuthentication.propTypes = {\n  token: t.string,\n  children: t.object.isRequired,\n}\n","/** @jsx jsx */\nimport { jsx, useColorMode } from 'theme-ui'\nimport { useDispatch } from 'react-redux'\nimport moon from './moon.svg'\nimport sun from './sun.svg'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n  const [colorMode, setColorMode] = useColorMode()\n\n  return (\n    <div\n      sx={{\n        bg: 'p.3',\n        fontSize: 3,\n        p: 3,\n        color: 'n.7',\n        fontWeight: 2,\n        boxShadow: 0,\n        top: 0,\n        right: 0,\n        left: 0,\n        position: 'fixed',\n        height: 7,\n        display: 'flex',\n        justifyContent: 'space-between',\n        zIndex: 1,\n      }}\n    >\n      <div className=\"appName\">Taskki</div>\n      <div sx={{ display: 'flex' }}>\n        <button\n          onClick={() => {\n            setColorMode(colorMode === 'default' ? 'dark' : 'default')\n          }}\n          sx={{\n            fontFamily: 'inherit',\n            fontSize: 2,\n            border: 0,\n            padding: 0,\n            bg: 'transparent',\n            color: 'n.6',\n            cursor: 'pointer',\n            outline: 'none',\n            mx: 2,\n            fontWeight: 3,\n          }}\n        >\n          <img\n            src={colorMode === 'default' ? moon : sun}\n            sx={{ width: 4 }}\n            alt=\"color mode\"\n          />\n        </button>\n\n        <button\n          onClick={() => {\n            dispatch({ type: 'logout' })\n          }}\n          sx={{\n            fontFamily: 'inherit',\n            fontSize: 2,\n            border: 0,\n            padding: 0,\n            bg: 'transparent',\n            color: 'n.6',\n            cursor: 'pointer',\n            outline: 'none',\n          }}\n        >\n          Log out\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    byId: {},\n    ids: [],\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    getTasksStart(state) {\n      state.loading = true\n      state.error = null\n    },\n    getTasksSuccess(state, { payload }) {\n      const { tasksById, taskIds } = payload\n      state.byId = tasksById\n      state.ids = taskIds\n      state.loading = false\n      state.error = null\n    },\n    getTasksFailure(state, action) {\n      state.loading = false\n      state.error = action.payload\n    },\n\n    addTask(state, { payload }) {\n      const { id, text } = payload\n      state.byId[id] = { id, text, completed: false }\n      state.ids.push(id)\n    },\n    addTaskStart(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = true\n      state.byId[id].error = null\n    },\n    addTaskSuccess(state, { payload }) {\n      const { id } = payload\n      state.byId[id] = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = null\n    },\n    addTaskFailure(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = payload\n    },\n\n    updateTask(state, { payload }) {\n      const { id } = payload\n      state.byId[id] = { ...state.byId[id], ...payload }\n    },\n    updateTaskStart(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = true\n      state.byId[id].error = null\n    },\n    updateTaskSuccess(state, { payload }) {\n      const { id } = payload\n      state.byId[id] = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = null\n    },\n    updateTaskFailure(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = payload\n    },\n\n    deleteTask(state, { payload }) {\n      const { id } = payload\n      state.ids = state.ids.filter((_id) => _id !== id)\n      delete state.byId[id]\n    },\n    deleteTaskStart(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = true\n      state.byId[id].error = null\n    },\n    deleteTaskSuccess(state, { payload }) {\n      const { id } = payload\n      state.byId[id] = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = null\n    },\n    deleteTaskFailure(state, { payload }) {\n      const { id } = payload\n      state.byId[id].syncing = false\n      state.byId[id].error = payload\n    },\n  },\n})\n\nexport const {\n  addTask,\n  addTaskStart,\n  addTaskFailure,\n  getTasksStart,\n  getTasksSuccess,\n  getTasksFailure,\n  addTaskSuccess,\n  updateTask,\n  updateTaskStart,\n  updateTaskSuccess,\n  updateTaskFailure,\n  deleteTask,\n  deleteTaskStart,\n  deleteTaskSuccess,\n  deleteTaskFailure,\n} = tasksSlice.actions\n\nexport const getTasks = (state) =>\n  state.ids.map((id) => state.byId[id]).filter((task) => !task.archived)\n\nexport const getTask = (state, taskId) => state.tasks.byId[taskId]\n\nexport default tasksSlice.reducer\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit'\r\nimport tasksReducer from '../features/tasks/tasksSlice'\r\nimport authReducer from '../features/auth/authSlice'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { createLogger } from 'redux-logger'\r\nimport { load } from '../util/localStorageUtil'\r\n\r\nconst logger = createLogger({\r\n  predicate: (_, action) => !action.type.startsWith('@@redux-form'),\r\n})\r\n\r\nconst middleware = [...getDefaultMiddleware()]\r\nif (process.env.NODE_ENV === 'development') {\r\n  middleware.push(logger)\r\n}\r\n\r\nconst combinedReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  form: formReducer,\r\n  auth: authReducer,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'logout') {\r\n    localStorage.removeItem('user')\r\n    state = undefined\r\n  }\r\n  return combinedReducer(state, action)\r\n}\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: {\r\n    auth: { currentUser: load('user') },\r\n  },\r\n  middleware,\r\n})\r\n","import ky from 'ky'\nimport { getToken } from '../auth/authSlice'\nimport Store from '../../app/store'\n\nconst api = ky.extend({\n  hooks: {\n    beforeRequest: [\n      (options) => {\n        const token = getToken(Store.getState())\n        token &&\n          options.headers.set('Authorization', 'Token token=\"' + token + '\"')\n      },\n    ],\n  },\n})\n\nexport const getTasks = () => api.get('/api/tasks').json()\n\nexport const postTask = ({ id, text }) =>\n  api\n    .post('/api/tasks', {\n      json: {\n        id,\n        text,\n      },\n    })\n    .json()\n\nexport const updateTask = (taskFields) => {\n  const { id } = taskFields\n  return api\n    .patch(`/api/tasks/${id}`, {\n      json: taskFields,\n    })\n    .json()\n}\n\nexport const deleteTask = ({ id }) => {\n  return api.delete(`/api/tasks/${id}`).json()\n}\n","import * as TasksApi from './tasksApi'\nimport { v4 as uuid } from 'uuid'\nimport { normalize, schema } from 'normalizr'\nimport ky from 'ky'\nimport {\n  addTask,\n  addTaskStart,\n  addTaskSuccess,\n  addTaskFailure,\n  getTasksStart,\n  getTasksSuccess,\n  getTasksFailure,\n  updateTask,\n  updateTaskStart,\n  updateTaskSuccess,\n  updateTaskFailure,\n  deleteTask,\n  deleteTaskStart,\n  deleteTaskSuccess,\n  deleteTaskFailure,\n} from './tasksSlice'\n\nconst taskSchema = new schema.Entity('tasks')\nconst tasksSchema = [taskSchema]\n\nexport const getTasksRequest = () => async (dispatch) => {\n  try {\n    dispatch(getTasksStart())\n\n    const tasks = await TasksApi.getTasks()\n    const { entities, result } = normalize(tasks, tasksSchema)\n    const tasksById = entities.tasks || {}\n    const taskIds = result\n\n    dispatch(getTasksSuccess({ tasksById, taskIds }))\n  } catch (error) {\n    if (!(error instanceof ky.HTTPError)) throw error\n    const tasksFailure = await error.response.json()\n\n    dispatch(getTasksFailure(tasksFailure))\n    console.error('getTasksFailure:', tasksFailure)\n  }\n}\n\nexport const addTaskRequest = (task) => async (dispatch) => {\n  const id = uuid()\n  const newTask = { ...task, id }\n  try {\n    dispatch(addTask(newTask))\n    dispatch(addTaskStart(newTask))\n\n    const taskSuccess = await TasksApi.postTask(newTask)\n    dispatch(addTaskSuccess(taskSuccess))\n  } catch (error) {\n    if (!(error instanceof ky.HTTPError)) throw error\n    const taskFailure = await error.response.json()\n\n    dispatch(addTaskFailure({ ...taskFailure, id }))\n    console.error('addTaskFailure:', taskFailure)\n  }\n}\n\nexport const updateTaskRequest = (taskFields) => async (dispatch) => {\n  const { id } = taskFields\n  try {\n    dispatch(updateTaskStart(taskFields))\n\n    dispatch(updateTask(taskFields))\n    const taskSuccess = await TasksApi.updateTask(taskFields)\n    dispatch(updateTaskSuccess(taskSuccess))\n  } catch (error) {\n    if (!(error instanceof ky.HTTPError)) throw error\n    const taskFailure = await error.response.json()\n\n    dispatch(updateTaskFailure({ ...taskFailure, id }))\n    console.error('updateTaskFailure:', taskFailure)\n  }\n}\n\nexport const archiveTaskRequest = ({ id }) =>\n  updateTaskRequest({\n    id,\n    archived: true,\n  })\n\nexport const deleteTaskRequest = ({ id }) => async (dispatch) => {\n  try {\n    dispatch(deleteTaskStart({ id }))\n\n    dispatch(deleteTask({ id }))\n    const taskSuccess = await TasksApi.deleteTask({ id })\n    dispatch(deleteTaskSuccess(taskSuccess))\n  } catch (error) {\n    if (!(error instanceof ky.HTTPError)) throw error\n    const taskFailure = await error.response.json()\n\n    dispatch(deleteTaskFailure({ ...taskFailure, id }))\n    console.error('deleteTaskFailure:', taskFailure)\n  }\n}\n","import t from 'prop-types'\n\nexport const datePropType = (props, propName, componentName) => {\n  if (!props[propName]) return\n  if (\n    !/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.(\\d{6}|\\d{3})Z/.test(props[propName])\n  ) {\n    return new Error(\n      `Invalid prop ${propName} value: ${props[propName]} supplied to ${componentName}. \n      Date validation failed. `\n    )\n  }\n}\n\nexport const guidPropType = (props, propName, componentName) => {\n  if (\n    props[propName] &&\n    !/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}/.test(\n      props[propName]\n    )\n  ) {\n    return new Error(\n      `Invalid prop ${propName} value: ${props[propName]} supplied to ${componentName}. \n      Guid validation failed. `\n    )\n  }\n}\n\nexport const userProps = {\n  id: t.number,\n  name: t.string,\n  avatarKey: t.string,\n  username: t.string,\n  lastSeen: datePropType,\n  isOnline: t.bool,\n}\n\nconst { lastSeen, ...cUserProps } = userProps\nexport const contactUserProps = cUserProps\n\nexport const currentUserProps = {\n  ...userProps,\n  token: t.string,\n  email: t.string,\n}\n\nexport const commonMessageProps = {\n  id: guidPropType,\n  text: t.string,\n  senderId: t.number,\n  sender: t.exact(currentUserProps),\n  conversationId: t.string,\n  mediaKey: t.string,\n  mediaName: t.string,\n  mediaSize: t.number,\n  mediaType: t.string,\n  createdAt: datePropType,\n  updatedAt: datePropType,\n  selected: t.bool,\n}\n\nexport const replyMessageProps = {\n  ...commonMessageProps,\n}\n\nexport const messageProps = {\n  ...commonMessageProps,\n  replyMessageId: guidPropType,\n  replyMessage: t.exact(replyMessageProps),\n  replyTo: t.exact(replyMessageProps),\n  byCurrentUser: t.bool,\n  offline: t.bool,\n  status: t.string,\n}\n\nexport const conversationProps = {\n  id: guidPropType,\n  createdAt: t.string,\n  users: t.arrayOf(t.number),\n  accepted: t.bool,\n  messages: t.arrayOf(guidPropType),\n  userLastRead: datePropType,\n  peerLastRead: datePropType,\n  peer: t.number.isRequired,\n  replyTo: guidPropType,\n  isCreating: t.bool,\n  unreadReceivedMessageCount: t.number,\n  messagesFetched: t.bool,\n  messageAddedTimestamp: t.number,\n  peerTyping: t.bool,\n}\n\nexport const taskProps = {\n  id: guidPropType,\n  text: t.string,\n  completed: t.bool,\n  syncing: t.bool,\n  error: t.object,\n  archived: t.bool,\n  createdAt: datePropType,\n}\n\nexport const messageDateStrType = (props, propName, componentName) => {\n  if (!props[propName]) return\n  if (\n    !/^\\w+\\s\\w+\\s.+\\s\\d{4}$|^\\d{1,2}:\\d{2}:\\d{2}\\s\\w{2}$/.test(props[propName])\n  ) {\n    return new Error(\n      `Invalid prop ${propName} value: ${props[propName]} supplied to ${componentName}. \n      Date validation failed. `\n    )\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport t from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport { updateTaskRequest } from './taskRequests'\nimport check from './check.svg'\nimport circle from './circle.svg'\nimport { taskProps } from '../../util/propTypes'\nimport { Link } from 'react-router-dom'\n\nconst taskStyle = (completed) => {\n  const base = {\n    px: 1,\n    width: '100%',\n    py: 3,\n  }\n\n  const completedStyle = completed\n    ? { textDecoration: 'line-through', color: 'n.4' }\n    : {}\n  return { ...base, ...completedStyle }\n}\n\nconst Task = ({ id, text, completed }) => {\n  const dispatch = useDispatch()\n  return (\n    <div\n      sx={{\n        display: 'flex',\n        borderBottom: '1px solid #000',\n        borderColor: 'n.6',\n        alignItems: 'center',\n      }}\n    >\n      <span\n        onClick={() => {\n          dispatch(\n            updateTaskRequest({\n              id,\n              completed: !completed,\n            })\n          )\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={completed}\n          sx={{\n            display: 'none',\n            '& + span': {\n              color: 'red',\n              display: 'inline-block',\n              width: '16px',\n              height: '16px',\n              backgroundSize: '16px',\n              cursor: 'pointer',\n              mr: 1,\n              backgroundImage: `url(${circle})`,\n            },\n            '&:checked + span': {\n              backgroundImage: `url(${check})`,\n              border: 'none',\n            },\n          }}\n        />\n        <span></span>\n      </span>\n      <Link\n        to={`tasks/${id}`}\n        sx={{\n          color: 'n.1',\n          textDecoration: 'none',\n          width: '100%',\n          ...taskStyle(completed),\n        }}\n        key={id}\n      >\n        {' '}\n        {text}\n      </Link>\n    </div>\n  )\n}\n\nTask.propTypes = t.exact(taskProps).isRequired\n\nexport default Task\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport t from 'prop-types'\nimport { useState, useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateTaskRequest } from './taskRequests'\nimport { useParams } from 'react-router-dom'\n\nconst textStyle = {\n  fontSize: 5,\n  fontWeight: 3,\n  width: '100%',\n  color: 'n.1',\n}\n\nconst TaskEditInput = ({ setEditing, text }) => {\n  const textInput = useRef(null)\n  const dispatch = useDispatch()\n  const { taskId } = useParams()\n\n  useEffect(() => {\n    textInput.current.focus()\n  })\n  const [inputVal, setInputVal] = useState(text)\n\n  const handleChange = (e) => {\n    setInputVal(e.target.value)\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      updateText(e.target.value)\n    } else if (e.keyCode === 27) {\n      setEditing(false)\n    }\n  }\n\n  const handleBlur = (e) => {\n    updateText(e.target.value)\n  }\n\n  const updateText = (text) => {\n    setEditing(false)\n    dispatch(updateTaskRequest({ id: taskId, text }))\n  }\n\n  return (\n    <input\n      type=\"text\"\n      sx={textStyle}\n      value={inputVal}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onBlur={handleBlur}\n      ref={textInput}\n    />\n  )\n}\n\nTaskEditInput.propTypes = {\n  setEditing: t.func,\n  text: t.string,\n}\n\nexport default TaskEditInput\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport t from 'prop-types'\nimport { useState } from 'react'\nimport TaskEditInput from './taskEditInput'\n\nconst textStyle = {\n  fontSize: 5,\n  fontWeight: 3,\n  width: '100%',\n  color: 'n.1',\n}\n\nconst textLabelStyle = {\n  cursor: 'pointer',\n}\n\nconst TaskTextLabel = ({ setEditing, text }) => (\n  <div\n    sx={{ ...textStyle, ...textLabelStyle }}\n    onClick={() => {\n      setEditing(true)\n    }}\n  >\n    {text}\n  </div>\n)\n\nTaskTextLabel.propTypes = {\n  setEditing: t.func,\n  text: t.string,\n}\n\nconst TaskDetailsText = ({ text }) => {\n  const [editing, setEditing] = useState(false)\n\n  const detailText = editing ? (\n    <TaskEditInput setEditing={setEditing} text={text} />\n  ) : (\n    <TaskTextLabel setEditing={setEditing} text={text} />\n  )\n  return <div sx={{ mb: 5 }}>{detailText}</div>\n}\n\nTaskDetailsText.propTypes = {\n  text: t.string,\n}\n\nexport default TaskDetailsText\n","/** @jsx jsx */\nimport { jsx, Button } from 'theme-ui'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { guidPropType } from '../../util/propTypes'\nimport t from 'prop-types'\nimport { updateTaskRequest, archiveTaskRequest } from './taskRequests'\n\nconst actions = {\n  textAlign: 'center',\n  bg: 'n.8',\n  borderBottomLeftRadius: 4,\n  borderBottomRightRadius: 4,\n  p: 3,\n}\n\nconst archiveButtonStyle = {\n  color: 'a.2',\n  bg: 'transparent',\n  fontWeight: 3,\n  outline: 'none',\n  cursor: 'pointer',\n}\n\nconst completeButtonStyle = {\n  bg: '#fff',\n  fontWeight: 3,\n  outline: 'none',\n  border: '1px solid',\n  borderColor: 'a2.2',\n  color: 'a2.2',\n  cursor: 'pointer',\n}\n\nconst TaskDetailsActions = ({ id, completed }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleCompleteClick = () => {\n    dispatch(\n      updateTaskRequest({\n        id,\n        completed: !completed,\n      })\n    )\n  }\n\n  const handleArchiveClick = () => {\n    dispatch(\n      archiveTaskRequest({\n        id,\n      })\n    )\n    history.push('/')\n  }\n\n  return (\n    <div sx={actions}>\n      <Button sx={archiveButtonStyle} onClick={handleArchiveClick}>\n        Archive\n      </Button>\n      <Button sx={completeButtonStyle} onClick={handleCompleteClick}>\n        {completed ? 'Uncomplete' : 'Complete'}\n      </Button>\n    </div>\n  )\n}\n\nTaskDetailsActions.propTypes = {\n  id: guidPropType,\n  completed: t.bool,\n}\n\nexport default TaskDetailsActions\n","/** @jsx jsx */\nimport { jsx, Text } from 'theme-ui'\nimport { datePropType } from '../../util/propTypes'\nimport moment from 'moment'\n\nconst TaskDate = ({ createdAt }) => (\n  <div>\n    <Text sx={{ fontSize: 1, color: 'n.3', mb: 2 }} variant=\"caps\">\n      Created On\n    </Text>\n    <div sx={{ fontSize: 2 }}>{moment(createdAt).format('MMMM Do YYYY')}</div>\n  </div>\n)\n\nTaskDate.propTypes = {\n  createdAt: datePropType,\n}\n\nexport default TaskDate\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport t from 'prop-types'\nimport { useState, useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateTaskRequest } from './taskRequests'\nimport { useParams } from 'react-router-dom'\n\nconst notesInputStyle = {\n  width: '100%',\n  color: 'n.1',\n  outline: 'none',\n  borderColor: 'n.4',\n  borderRadius: 3,\n}\n\nconst TaskNotesEdit = ({ setEditing, notes }) => {\n  const notesInput = useRef(null)\n  const dispatch = useDispatch()\n  const { taskId } = useParams()\n\n  useEffect(() => {\n    notesInput.current.focus()\n  })\n  const [inputVal, setInputVal] = useState(notes)\n\n  const handleChange = (e) => {\n    setInputVal(e.target.value)\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      updateText(e.target.value)\n    } else if (e.keyCode === 27) {\n      setEditing(false)\n    }\n  }\n\n  const handleBlur = (e) => {\n    updateText(e.target.value)\n  }\n\n  const updateText = (notes) => {\n    setEditing(false)\n    dispatch(updateTaskRequest({ id: taskId, notes }))\n  }\n\n  return (\n    <textarea\n      sx={notesInputStyle}\n      value={inputVal}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onBlur={handleBlur}\n      ref={notesInput}\n    />\n  )\n}\n\nTaskNotesEdit.propTypes = {\n  setEditing: t.func,\n  notes: t.string,\n}\n\nexport default TaskNotesEdit\n","/** @jsx jsx */\nimport { jsx, Text } from 'theme-ui'\nimport t from 'prop-types'\nimport TaskNotesEdit from './taskNotesEdit'\nimport { useState } from 'react'\n\nconst TaskNotesDisplay = ({ notes, setEditing }) => (\n  <div\n    sx={{ cursor: 'pointer' }}\n    onClick={() => {\n      setEditing(true)\n    }}\n  >\n    {notes}\n  </div>\n)\n\nTaskNotesDisplay.propTypes = {\n  notes: t.string,\n  setEditing: t.func,\n}\n\nconst TaskNotesPrompt = ({ setEditing }) => (\n  <div\n    sx={{\n      border: '1px solid',\n      borderColor: 'n.4',\n      p: 3,\n      borderRadius: 4,\n      cursor: 'pointer',\n      borderStyle: 'dashed',\n    }}\n    onClick={() => {\n      setEditing(true)\n    }}\n  >\n    <Text\n      sx={{\n        fontSize: 0,\n        color: 'n.3',\n        mb: 1,\n        textAlign: 'center',\n      }}\n      variant=\"caps\"\n    >\n      Click to add\n    </Text>\n  </div>\n)\n\nTaskNotesPrompt.propTypes = {\n  setEditing: t.func,\n}\n\nconst TaskNotes = ({ notes, setEditing, editing }) => {\n  const detailText = editing ? (\n    <TaskNotesEdit setEditing={setEditing} notes={notes} />\n  ) : (\n    <TaskNotesDisplay setEditing={setEditing} notes={notes} />\n  )\n  return <div sx={{ mb: 4 }}>{detailText}</div>\n}\n\nTaskNotes.propTypes = {\n  notes: t.string,\n  setEditing: t.func,\n  editing: t.bool,\n}\n\nconst TaskNotesBody = ({ notes }) => {\n  const [editing, setEditing] = useState(false)\n\n  if (!notes && !editing) {\n    return <TaskNotesPrompt setEditing={setEditing} />\n  }\n\n  return <TaskNotes notes={notes} editing={editing} setEditing={setEditing} />\n}\n\nTaskNotesBody.propTypes = {\n  notes: t.string,\n}\n\nconst TaskNotesSection = ({ notes }) => (\n  <div sx={{ mb: 5 }}>\n    <Text sx={{ fontSize: 1, color: 'n.3', mb: 2 }} variant=\"caps\">\n      NOTES\n    </Text>\n\n    <TaskNotesBody notes={notes} />\n  </div>\n)\n\nTaskNotesSection.propTypes = {\n  notes: t.string,\n}\n\nexport default TaskNotesSection\n","/** @jsx jsx */\nimport { jsx, Close } from 'theme-ui'\nimport { useHistory, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getTask } from './tasksSlice'\nimport { taskProps } from '../../util/propTypes'\nimport t from 'prop-types'\nimport TaskDetailsText from './taskDetailsText'\nimport TaskDetailsActions from './taskDetailsActions'\nimport TaskDate from './taskDate'\nimport TaskNotes from './taskNotesSection'\n\nconst modalBackdrop = {\n  position: 'absolute',\n  backgroundColor: 'hsl(0,0%,0%,0.2)',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n}\n\nconst modal = {\n  maxWidth: '600px',\n  width: '80%',\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  margin: 'auto',\n  background: 'white',\n  boxShadow: 9,\n  pt: 3,\n  borderRadius: 4,\n  color: 'n.1',\n}\n\nconst closeButton = {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  color: 'n.4',\n  cursor: 'pointer',\n  width: 5,\n}\n\nconst TaskDetails = ({ task }) => {\n  const history = useHistory()\n  const { text, id, completed, createdAt, notes } = task\n\n  return (\n    <div>\n      <div\n        className=\"modalBackdrop\"\n        sx={modalBackdrop}\n        onClick={() => history.push('/')}\n      ></div>\n      <div className=\"modal\" sx={modal} onClick={(e) => e.preventDefault()}>\n        <div sx={{ p: 3, px: 5 }}>\n          <Close sx={closeButton} onClick={() => history.push('/')} />\n          <TaskDetailsText text={text} />\n          <TaskNotes notes={notes} />\n          <TaskDate createdAt={createdAt} />\n        </div>\n        <TaskDetailsActions id={id} completed={completed} />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, { match: { params } }) => {\n  return {\n    task: getTask(state, params.taskId),\n  }\n}\n\nTaskDetails.propTypes = {\n  task: t.exact(taskProps),\n}\n\nexport default withRouter(connect(mapStateToProps)(TaskDetails))\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { connect } from 'react-redux'\n\nimport t from 'prop-types'\nimport Task from './task'\nimport { taskProps } from '../../util/propTypes'\nimport { getTasks } from './tasksSlice'\nimport { useCallback } from 'react'\nimport Modal from './taskDetails'\nimport { useParams } from 'react-router-dom'\n\nconst TaskList = ({ tasks }) => {\n  const { taskId } = useParams()\n  const taskGroup = useCallback(\n    (predicate) =>\n      tasks\n        .filter(predicate)\n        .map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            text={task.text}\n            completed={task.completed}\n          />\n        )),\n    [tasks]\n  )\n\n  return (\n    <div className=\"tasklist\">\n      {taskId && tasks.length > 0 && <Modal taskId={taskId} />}\n      {taskGroup((task) => !task.completed)}\n      {taskGroup((task) => task.completed)}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ tasks }) => ({\n  tasks: getTasks(tasks),\n})\n\nexport default connect(mapStateToProps)(TaskList)\n\nTaskList.propTypes = {\n  tasks: t.arrayOf(t.exact(taskProps)).isRequired,\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Field, reduxForm, reset } from 'redux-form'\nimport { connect } from 'react-redux'\nimport t from 'prop-types'\n\nconst TaskForm = ({ handleSubmit, reset }) => {\n  const keyDownHandler = (handleSubmit) => (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault()\n      handleSubmit()\n      reset()\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        component=\"textarea\"\n        name=\"taskText\"\n        rows={3}\n        onKeyDown={keyDownHandler(handleSubmit)}\n        sx={{\n          width: '100%',\n          borderRadius: 4,\n          borderColor: 'n.3',\n          p: 2,\n          outline: 'none',\n        }}\n      ></Field>\n    </form>\n  )\n}\n\nTaskForm.propTypes = {\n  handleSubmit: t.func.isRequired,\n  reset: t.func.isRequired,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  reset: () => dispatch(reset('taskForm')),\n})\n\nexport default reduxForm({ form: 'taskForm' })(\n  connect(null, mapDispatchToProps)(TaskForm)\n)\n","/** @jsx jsx */\nimport { useEffect } from 'react'\nimport { jsx } from 'theme-ui'\nimport { useDispatch } from 'react-redux'\nimport { getTasksRequest, addTaskRequest } from '../tasks/taskRequests'\nimport TaskList from '../tasks/taskList'\nimport TaskForm from '../tasks/taskForm'\n\nconst Main = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getTasksRequest())\n  }, [dispatch])\n\n  const submit = ({ taskText }) => {\n    dispatch(addTaskRequest({ text: taskText }))\n  }\n\n  return (\n    <div\n      sx={{\n        px: 7,\n        bg: 'n.10',\n        maxWidth: 17,\n        m: 'auto',\n        fontSize: 2,\n        mt: 9,\n      }}\n    >\n      <TaskList />\n      <TaskForm onSubmit={submit} />\n    </div>\n  )\n}\n\nexport default Main\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport Authentication from '../auth/authentication'\nimport Header from './header'\nimport Main from './main'\n\nconst Home = () => (\n  <Authentication>\n    <React.Fragment>\n      <Header />\n      <Main />\n    </React.Fragment>\n  </Authentication>\n)\n\nexport default Home\n","/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport SignIn from '../features/auth/signIn'\r\nimport SignUp from '../features/auth/signUp'\r\nimport Home from '../features/layout/home'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div\r\n      sx={{\r\n        height: '100vh',\r\n        fontSize: 2,\r\n        fontFamily: 'body',\r\n        bg: 'n.10',\r\n        overflow: 'auto',\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route path=\"/signin\" component={SignIn} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n        <Route exact path=\"/tasks/:taskId\" component={Home} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        {/* <Route component={NotFound} /> */}\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n\r\n              // eslint-disable-next-line no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // eslint-disable-next-line no-console\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","const mainFont =\n  '\"Avenir Next\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif'\n\nconst fonts = {\n  body: mainFont,\n  heading: mainFont,\n  monospace: 'Menlo, monospace',\n}\n\nconst space = [\n  0,\n  4,\n  8,\n  12,\n  16,\n  24,\n  32,\n  40,\n  48,\n  64,\n  96,\n  128,\n  192,\n  256,\n  384,\n  512,\n  640,\n  768,\n]\nconst sizes = space\n\nconst fontSizes = [10, 12, 14, 16, 18, 20, 24, 30, 36, 48, 60, 72]\nfontSizes.body = fontSizes[2]\nfontSizes.display = fontSizes[5]\n\nconst borderWidths = [0, 1, 2, 3, 4, 5, 6]\nconst radii = [0, 2, 3, 4, 6, 8, 12, 16]\n\nconst fontWeights = [400, 500, 600, 700]\n\nconst letterSpacings = [0.5, 1, 2]\n\nconst shadows = [\n  '0 1px 3px hsla(0,0%,0%,.2)',\n  '0 4px 6px hsla(0,0%,0%,.2)',\n  '0 5px 15px hsla(0,0%,0%,.2)',\n  '0 10px 24px hsla(0,0%,0%,.2)',\n  '0 15px 35px hsla(0,0%,0%,.2)',\n\n  '0 1px 3px hsla(0,0%,0%,.12),0 1px 2px hsla(0,0%,0%,.24)',\n  '0 3px 6px hsla(0,0%,0%,.15),0 2px 4px hsla(0,0%,0%,.12)',\n  '0 3px 6px hsla(0,0%,0%,.10),0 10px 20px hsla(0,0%,0%,.15)',\n  '0 15px 25px hsla(0,0%,0%,.15),0 5px 10px hsla(0,0%,0%,.5)',\n  '0 20px 40px hsla(0,0%,0%,.2)',\n]\n\nconst blues = [\n  'hsl(207deg 50% 15%)',\n  'hsl(207deg 59% 28%)',\n  'hsl(207deg 61% 39%)',\n  'hsl(207deg 57% 49%)',\n  'hsl(207deg 58% 62%)',\n  'hsl(206deg 75% 81%)',\n  'hsl(206deg 100% 97%)',\n]\n\nconst greys = [\n  'hsl(213deg 12% 15%)',\n  'hsl(210deg 10% 23%)',\n  'hsl(187deg 5% 30%)',\n  'hsl(210deg 7% 56%)',\n  'hsl(210deg 11% 71%)',\n  'hsl(210deg 14% 83%)',\n  'hsl(210deg 14% 89%)',\n  'hsl(210deg 16% 93%)',\n  'hsl(210deg 17% 95%)',\n  'hsl(210deg 17% 98%)',\n  'hsl(210deg 17% 100%)',\n]\n\nconst cyanGreens = [\n  'hsl(179deg 53% 18%)',\n  'hsl(174deg 53% 26%)',\n  'hsl(174deg 50% 38%)',\n  'hsl(174deg 45% 47%)',\n  'hsl(177deg 56% 65%)',\n  'hsl(176deg 67% 80%)',\n  'hsl(177deg 100% 95%)',\n]\n\nconst greens = [\n  'rgb(23, 80, 56)',\n  'rgb(31, 118, 67)',\n  'rgb(45, 156, 90)',\n  'rgb(64, 192, 117)',\n  'rgb(120, 216, 161)',\n  'rgb(170, 237, 194)',\n  'rgb(228, 252, 236)',\n]\n\nconst yellows = [\n  'rgb(91, 71, 24)',\n  'rgb(139, 108, 39)',\n  'rgb(201, 164, 70)',\n  'rgb(243, 201, 108)',\n  'rgb(249, 225, 164)',\n  'rgb(253, 243, 216)',\n  'rgb(255, 252, 244)',\n]\n\nconst reds = [\n  'rgb(96, 25, 26)',\n  'rgb(135, 38, 31)',\n  'rgb(181, 34, 38)',\n  'rgb(218, 50, 54)',\n  'rgb(226, 101, 103)',\n  'rgb(241, 169, 170)',\n  'rgb(251, 232, 232)',\n]\n\nconst neutral = greys\nconst n = neutral\nconst prime = reds\nconst p = prime\nconst danger = reds\n\nconst accent = cyanGreens\nconst accent2 = greens\nconst a2 = accent2\nconst a = accent\n\nconst dark = {\n  text: neutral[5],\n  background: neutral[0],\n  primary: p[2],\n  n,\n  p,\n  a,\n  a2,\n  accent2,\n  danger,\n}\n\nconst defaultColors = {\n  text: neutral[0],\n  background: neutral[5],\n  primary: p[2],\n  n,\n  p,\n  a,\n  a2,\n  accent,\n  accent2,\n  danger,\n}\n\nconst colors = {\n  ...defaultColors,\n  modes: {\n    dark,\n  },\n}\n\nconst text = {\n  default: {\n    color: 'text',\n    fontSize: 3,\n  },\n  caps: {\n    textTransform: 'uppercase',\n  },\n  heading: {\n    fontFamily: 'heading',\n    fontWeight: 'heading',\n    lineHeight: 'heading',\n  },\n}\n\nconst theme = {\n  fonts,\n  colors,\n  sizes,\n  space,\n  fontSizes,\n  fontWeights,\n  borderWidths,\n  radii,\n  letterSpacings,\n  shadows,\n  text,\n}\n\nexport default theme\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app/app'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ThemeProvider } from 'theme-ui'\r\nimport theme from './theme'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/alert.75219400.svg\";"],"sourceRoot":""}